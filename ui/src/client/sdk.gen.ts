// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-axios';
import type { AddAssessmentApiV1AdminAssessmentAddPostData, AddAssessmentApiV1AdminAssessmentAddPostResponse, AddAssessmentApiV1AdminAssessmentAddPostError, EditAssessmentApiV1AdminAssessmentAssessmentIdEditPostData, EditAssessmentApiV1AdminAssessmentAssessmentIdEditPostError, AddDayApiV1AdminDayAddPostData, AddDayApiV1AdminDayAddPostResponse, AddDayApiV1AdminDayAddPostError, EditDayApiV1AdminDayDayIdEditPostData, EditDayApiV1AdminDayDayIdEditPostError, AddHallApiV1AdminHallAddPostData, AddHallApiV1AdminHallAddPostResponse, AddHallApiV1AdminHallAddPostError, EditHallApiV1AdminHallHallIdEditPostData, EditHallApiV1AdminHallHallIdEditPostError, GetYearHallsApiV1AdminHallYearYearIdGetData, GetYearHallsApiV1AdminHallYearYearIdGetResponse, GetYearHallsApiV1AdminHallYearYearIdGetError, AddPositionApiV1AdminPositionAddPostData, AddPositionApiV1AdminPositionAddPostResponse, AddPositionApiV1AdminPositionAddPostError, EditPositionApiV1AdminPositionPositionIdEditPostData, EditPositionApiV1AdminPositionPositionIdEditPostError, AddUserDayApiV1AdminUserDayAddPostData, AddUserDayApiV1AdminUserDayAddPostResponse, AddUserDayApiV1AdminUserDayAddPostError, EditPositionApiV1AdminUserDayUserDayIdEditPostData, EditPositionApiV1AdminUserDayUserDayIdEditPostError, DeleteUserDayApiV1AdminUserDayUserDayIdDeleteData, DeleteUserDayApiV1AdminUserDayUserDayIdDeleteResponse, DeleteUserDayApiV1AdminUserDayUserDayIdDeleteError, GetDayAssignmentsApiV1AdminUserDayDayDayIdAssignmentsGetData, GetDayAssignmentsApiV1AdminUserDayDayDayIdAssignmentsGetResponse, GetDayAssignmentsApiV1AdminUserDayDayDayIdAssignmentsGetError, AddYearApiV1AdminYearAddPostData, AddYearApiV1AdminYearAddPostResponse, AddYearApiV1AdminYearAddPostError, EditYearApiV1AdminYearYearIdEditPostData, EditYearApiV1AdminYearYearIdEditPostError, GetUsersListApiV1AdminYearYearIdUsersGetData, GetUsersListApiV1AdminYearYearIdUsersGetResponse, GetUsersListApiV1AdminYearYearIdUsersGetError, GetYearPositionsApiV1AdminYearYearIdPositionsGetData, GetYearPositionsApiV1AdminYearYearIdPositionsGetResponse, GetYearPositionsApiV1AdminYearYearIdPositionsGetError, GetRegistrationFormsApiV1AdminYearYearIdRegistrationFormsGetData, GetRegistrationFormsApiV1AdminYearYearIdRegistrationFormsGetResponse, GetRegistrationFormsApiV1AdminYearYearIdRegistrationFormsGetError, RegisterApiV1AuthTelegramRegisterPostData, RegisterApiV1AuthTelegramRegisterPostResponse, RegisterApiV1AuthTelegramRegisterPostError, MigrateApiV1AuthTelegramMigratePostData, MigrateApiV1AuthTelegramMigratePostResponse, MigrateApiV1AuthTelegramMigratePostError, LoginApiV1AuthTelegramLoginPostData, LoginApiV1AuthTelegramLoginPostResponse, LoginApiV1AuthTelegramLoginPostError, RefreshApiV1AuthRefreshPostData, RefreshApiV1AuthRefreshPostResponse, RefreshApiV1AuthRefreshPostError, MeApiV1AuthMeGetData, MeApiV1AuthMeGetResponse, UpdateUserApiV1AuthUpdatePostData, UpdateUserApiV1AuthUpdatePostResponse, UpdateUserApiV1AuthUpdatePostError, GetYearsApiV1YearGetData, GetYearsApiV1YearGetResponse, GetFormYearApiV1YearYearIdGetData, GetFormYearApiV1YearYearIdGetResponse, GetFormYearApiV1YearYearIdGetError, SaveFormYearApiV1YearYearIdPostData, SaveFormYearApiV1YearYearIdPostResponse, SaveFormYearApiV1YearYearIdPostError, ProxyPathGetData, ProxyPathGetError } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Add Assessment
 * Add new assessment
 */
export const addAssessmentApiV1AdminAssessmentAddPost = <ThrowOnError extends boolean = false>(options: Options<AddAssessmentApiV1AdminAssessmentAddPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AddAssessmentApiV1AdminAssessmentAddPostResponse, AddAssessmentApiV1AdminAssessmentAddPostError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/admin/assessment/add',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Edit Assessment
 */
export const editAssessmentApiV1AdminAssessmentAssessmentIdEditPost = <ThrowOnError extends boolean = false>(options: Options<EditAssessmentApiV1AdminAssessmentAssessmentIdEditPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, EditAssessmentApiV1AdminAssessmentAssessmentIdEditPostError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/admin/assessment/{assessment_id}/edit',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Add Day
 * Add new day
 */
export const addDayApiV1AdminDayAddPost = <ThrowOnError extends boolean = false>(options: Options<AddDayApiV1AdminDayAddPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AddDayApiV1AdminDayAddPostResponse, AddDayApiV1AdminDayAddPostError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/admin/day/add',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Edit Day
 */
export const editDayApiV1AdminDayDayIdEditPost = <ThrowOnError extends boolean = false>(options: Options<EditDayApiV1AdminDayDayIdEditPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, EditDayApiV1AdminDayDayIdEditPostError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/admin/day/{day_id}/edit',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Add Hall
 * Add new hall
 */
export const addHallApiV1AdminHallAddPost = <ThrowOnError extends boolean = false>(options: Options<AddHallApiV1AdminHallAddPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AddHallApiV1AdminHallAddPostResponse, AddHallApiV1AdminHallAddPostError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/admin/hall/add',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Edit Hall
 */
export const editHallApiV1AdminHallHallIdEditPost = <ThrowOnError extends boolean = false>(options: Options<EditHallApiV1AdminHallHallIdEditPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, EditHallApiV1AdminHallHallIdEditPostError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/admin/hall/{hall_id}/edit',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get Year Halls
 * Get all halls for a year (admin only)
 */
export const getYearHallsApiV1AdminHallYearYearIdGet = <ThrowOnError extends boolean = false>(options: Options<GetYearHallsApiV1AdminHallYearYearIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetYearHallsApiV1AdminHallYearYearIdGetResponse, GetYearHallsApiV1AdminHallYearYearIdGetError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/admin/hall/year/{year_id}',
        ...options
    });
};

/**
 * Add Position
 * Add new position
 */
export const addPositionApiV1AdminPositionAddPost = <ThrowOnError extends boolean = false>(options: Options<AddPositionApiV1AdminPositionAddPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AddPositionApiV1AdminPositionAddPostResponse, AddPositionApiV1AdminPositionAddPostError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/admin/position/add',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Edit Position
 */
export const editPositionApiV1AdminPositionPositionIdEditPost = <ThrowOnError extends boolean = false>(options: Options<EditPositionApiV1AdminPositionPositionIdEditPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, EditPositionApiV1AdminPositionPositionIdEditPostError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/admin/position/{position_id}/edit',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Add User Day
 * Add new user day
 */
export const addUserDayApiV1AdminUserDayAddPost = <ThrowOnError extends boolean = false>(options: Options<AddUserDayApiV1AdminUserDayAddPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AddUserDayApiV1AdminUserDayAddPostResponse, AddUserDayApiV1AdminUserDayAddPostError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/admin/user-day/add',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Edit Position
 */
export const editPositionApiV1AdminUserDayUserDayIdEditPost = <ThrowOnError extends boolean = false>(options: Options<EditPositionApiV1AdminUserDayUserDayIdEditPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, EditPositionApiV1AdminUserDayUserDayIdEditPostError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/admin/user-day/{user_day_id}/edit',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Delete User Day
 * Delete a user day assignment
 */
export const deleteUserDayApiV1AdminUserDayUserDayIdDelete = <ThrowOnError extends boolean = false>(options: Options<DeleteUserDayApiV1AdminUserDayUserDayIdDeleteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserDayApiV1AdminUserDayUserDayIdDeleteResponse, DeleteUserDayApiV1AdminUserDayUserDayIdDeleteError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/admin/user-day/{user_day_id}',
        ...options
    });
};

/**
 * Get Day Assignments
 * Get all assignments for a day (admin only)
 */
export const getDayAssignmentsApiV1AdminUserDayDayDayIdAssignmentsGet = <ThrowOnError extends boolean = false>(options: Options<GetDayAssignmentsApiV1AdminUserDayDayDayIdAssignmentsGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetDayAssignmentsApiV1AdminUserDayDayDayIdAssignmentsGetResponse, GetDayAssignmentsApiV1AdminUserDayDayDayIdAssignmentsGetError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/admin/user-day/day/{day_id}/assignments',
        ...options
    });
};

/**
 * Add Year
 * Add new year
 */
export const addYearApiV1AdminYearAddPost = <ThrowOnError extends boolean = false>(options: Options<AddYearApiV1AdminYearAddPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<AddYearApiV1AdminYearAddPostResponse, AddYearApiV1AdminYearAddPostError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/admin/year/add',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Edit Year
 */
export const editYearApiV1AdminYearYearIdEditPost = <ThrowOnError extends boolean = false>(options: Options<EditYearApiV1AdminYearYearIdEditPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, EditYearApiV1AdminYearYearIdEditPostError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/admin/year/{year_id}/edit',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get Users List
 * Get list of all users with their registration status for a specific year
 */
export const getUsersListApiV1AdminYearYearIdUsersGet = <ThrowOnError extends boolean = false>(options: Options<GetUsersListApiV1AdminYearYearIdUsersGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUsersListApiV1AdminYearYearIdUsersGetResponse, GetUsersListApiV1AdminYearYearIdUsersGetError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/admin/year/{year_id}/users',
        ...options
    });
};

/**
 * Get Year Positions
 * Get all positions for a year (admin only - includes non-desirable positions)
 */
export const getYearPositionsApiV1AdminYearYearIdPositionsGet = <ThrowOnError extends boolean = false>(options: Options<GetYearPositionsApiV1AdminYearYearIdPositionsGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetYearPositionsApiV1AdminYearYearIdPositionsGetResponse, GetYearPositionsApiV1AdminYearYearIdPositionsGetError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/admin/year/{year_id}/positions',
        ...options
    });
};

/**
 * Get Registration Forms
 * Get all registration forms for a year (admin only)
 */
export const getRegistrationFormsApiV1AdminYearYearIdRegistrationFormsGet = <ThrowOnError extends boolean = false>(options: Options<GetRegistrationFormsApiV1AdminYearYearIdRegistrationFormsGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetRegistrationFormsApiV1AdminYearYearIdRegistrationFormsGetResponse, GetRegistrationFormsApiV1AdminYearYearIdRegistrationFormsGetError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/admin/year/{year_id}/registration-forms',
        ...options
    });
};

/**
 * Register
 */
export const registerApiV1AuthTelegramRegisterPost = <ThrowOnError extends boolean = false>(options: Options<RegisterApiV1AuthTelegramRegisterPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<RegisterApiV1AuthTelegramRegisterPostResponse, RegisterApiV1AuthTelegramRegisterPostError, ThrowOnError>({
        url: '/api/v1/auth/telegram/register',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Migrate
 */
export const migrateApiV1AuthTelegramMigratePost = <ThrowOnError extends boolean = false>(options: Options<MigrateApiV1AuthTelegramMigratePostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<MigrateApiV1AuthTelegramMigratePostResponse, MigrateApiV1AuthTelegramMigratePostError, ThrowOnError>({
        url: '/api/v1/auth/telegram/migrate',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Login
 */
export const loginApiV1AuthTelegramLoginPost = <ThrowOnError extends boolean = false>(options: Options<LoginApiV1AuthTelegramLoginPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<LoginApiV1AuthTelegramLoginPostResponse, LoginApiV1AuthTelegramLoginPostError, ThrowOnError>({
        url: '/api/v1/auth/telegram/login',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Refresh
 */
export const refreshApiV1AuthRefreshPost = <ThrowOnError extends boolean = false>(options: Options<RefreshApiV1AuthRefreshPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<RefreshApiV1AuthRefreshPostResponse, RefreshApiV1AuthRefreshPostError, ThrowOnError>({
        url: '/api/v1/auth/refresh',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Me
 */
export const meApiV1AuthMeGet = <ThrowOnError extends boolean = false>(options?: Options<MeApiV1AuthMeGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<MeApiV1AuthMeGetResponse, unknown, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/auth/me',
        ...options
    });
};

/**
 * Update User
 */
export const updateUserApiV1AuthUpdatePost = <ThrowOnError extends boolean = false>(options: Options<UpdateUserApiV1AuthUpdatePostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<UpdateUserApiV1AuthUpdatePostResponse, UpdateUserApiV1AuthUpdatePostError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/auth/update',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get Years
 * Return info about all years
 */
export const getYearsApiV1YearGet = <ThrowOnError extends boolean = false>(options?: Options<GetYearsApiV1YearGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetYearsApiV1YearGetResponse, unknown, ThrowOnError>({
        url: '/api/v1/year/',
        ...options
    });
};

/**
 * Get Form Year
 * Return year positions, days and saved user form data
 */
export const getFormYearApiV1YearYearIdGet = <ThrowOnError extends boolean = false>(options: Options<GetFormYearApiV1YearYearIdGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetFormYearApiV1YearYearIdGetResponse, GetFormYearApiV1YearYearIdGetError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/year/{year_id}',
        ...options
    });
};

/**
 * Save Form Year
 * Save user year form data
 */
export const saveFormYearApiV1YearYearIdPost = <ThrowOnError extends boolean = false>(options: Options<SaveFormYearApiV1YearYearIdPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<SaveFormYearApiV1YearYearIdPostResponse, SaveFormYearApiV1YearYearIdPostError, ThrowOnError>({
        security: [
            {
                scheme: 'bearer',
                type: 'http'
            }
        ],
        url: '/api/v1/year/{year_id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Proxy
 */
export const proxyPathGet = <ThrowOnError extends boolean = false>(options: Options<ProxyPathGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<unknown, ProxyPathGetError, ThrowOnError>({
        url: '/{path}',
        ...options
    });
};
