// This file is auto-generated by @hey-api/openapi-ts

export type ApplicationFormYearSaveRequest = {
    desired_positions_ids: Array<number>;
    itmo_group: string | null;
    comments?: string;
};

export type ApplicationFormYearSavedResponse = {
    success?: true;
    positions: Array<PositionOut>;
    desired_positions: Array<PositionOut>;
    itmo_group?: string | null;
    comments?: string;
};

export type ErrorLoginResponse = {
    success?: false;
    description: string;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type PositionOut = {
    position_id: number;
    name: string;
};

export type RefreshTokenRequest = {
    refresh_token: string;
};

export type RegistrationRequest = {
    telegram_id: number;
    telegram_auth_date: number;
    telegram_first_name: string;
    telegram_hash: string;
    telegram_last_name: string | null;
    telegram_username: string | null;
    telegram_photo_url: string | null;
    first_name_ru: string;
    last_name_ru: string;
    full_name_en: string;
    isu_id: number | null;
    patronymic_ru: string | null;
};

export type SuccessfulLoginResponse = {
    success?: true;
    token: string;
    refresh_token: string;
    expires_in: number;
    refresh_expires_in: number;
};

export type TelegramLoginRequest = {
    telegram_id: number;
    telegram_auth_date: number;
    telegram_first_name: string;
    telegram_hash: string;
    telegram_last_name: string | null;
    telegram_username: string | null;
    telegram_photo_url: string | null;
};

export type UserResponse = {
    user_id: number;
    first_name_ru: string;
    last_name_ru: string;
    full_name_en: string;
    is_admin: boolean;
    isu_id: number | null;
    patronymic_ru: string | null;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type YearOut = {
    year_id: number;
    year_name: string;
    open_for_registration: boolean;
};

export type YearsResponse = {
    success?: true;
    years: Array<YearOut>;
};

export type RegisterApiV1AuthTelegramRegisterPostData = {
    body: RegistrationRequest;
    path?: never;
    query?: never;
    url: '/api/v1/auth/telegram/register';
};

export type RegisterApiV1AuthTelegramRegisterPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RegisterApiV1AuthTelegramRegisterPostError = RegisterApiV1AuthTelegramRegisterPostErrors[keyof RegisterApiV1AuthTelegramRegisterPostErrors];

export type RegisterApiV1AuthTelegramRegisterPostResponses = {
    /**
     * Successful Response
     */
    200: SuccessfulLoginResponse;
};

export type RegisterApiV1AuthTelegramRegisterPostResponse = RegisterApiV1AuthTelegramRegisterPostResponses[keyof RegisterApiV1AuthTelegramRegisterPostResponses];

export type LoginApiV1AuthTelegramLoginPostData = {
    body: TelegramLoginRequest;
    path?: never;
    query?: never;
    url: '/api/v1/auth/telegram/login';
};

export type LoginApiV1AuthTelegramLoginPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type LoginApiV1AuthTelegramLoginPostError = LoginApiV1AuthTelegramLoginPostErrors[keyof LoginApiV1AuthTelegramLoginPostErrors];

export type LoginApiV1AuthTelegramLoginPostResponses = {
    /**
     * Successful Response
     */
    200: SuccessfulLoginResponse | ErrorLoginResponse;
};

export type LoginApiV1AuthTelegramLoginPostResponse = LoginApiV1AuthTelegramLoginPostResponses[keyof LoginApiV1AuthTelegramLoginPostResponses];

export type RefreshApiV1AuthRefreshPostData = {
    body: RefreshTokenRequest;
    path?: never;
    query?: never;
    url: '/api/v1/auth/refresh';
};

export type RefreshApiV1AuthRefreshPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RefreshApiV1AuthRefreshPostError = RefreshApiV1AuthRefreshPostErrors[keyof RefreshApiV1AuthRefreshPostErrors];

export type RefreshApiV1AuthRefreshPostResponses = {
    /**
     * Successful Response
     */
    200: SuccessfulLoginResponse | ErrorLoginResponse;
};

export type RefreshApiV1AuthRefreshPostResponse = RefreshApiV1AuthRefreshPostResponses[keyof RefreshApiV1AuthRefreshPostResponses];

export type MeApiV1AuthMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/auth/me';
};

export type MeApiV1AuthMeGetResponses = {
    /**
     * Successful Response
     */
    200: UserResponse;
};

export type MeApiV1AuthMeGetResponse = MeApiV1AuthMeGetResponses[keyof MeApiV1AuthMeGetResponses];

export type GetYearsApiV1YearGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/year/';
};

export type GetYearsApiV1YearGetResponses = {
    /**
     * Successful Response
     */
    200: YearsResponse;
};

export type GetYearsApiV1YearGetResponse = GetYearsApiV1YearGetResponses[keyof GetYearsApiV1YearGetResponses];

export type GetFormYearApiV1YearYearIdGetData = {
    body?: never;
    path: {
        year_id: number;
    };
    query?: never;
    url: '/api/v1/year/{year_id}';
};

export type GetFormYearApiV1YearYearIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetFormYearApiV1YearYearIdGetError = GetFormYearApiV1YearYearIdGetErrors[keyof GetFormYearApiV1YearYearIdGetErrors];

export type GetFormYearApiV1YearYearIdGetResponses = {
    /**
     * Successful Response
     */
    200: ApplicationFormYearSavedResponse;
};

export type GetFormYearApiV1YearYearIdGetResponse = GetFormYearApiV1YearYearIdGetResponses[keyof GetFormYearApiV1YearYearIdGetResponses];

export type SaveFormYearApiV1YearYearIdPostData = {
    body: ApplicationFormYearSaveRequest;
    path: {
        year_id: number;
    };
    query?: never;
    url: '/api/v1/year/{year_id}';
};

export type SaveFormYearApiV1YearYearIdPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type SaveFormYearApiV1YearYearIdPostError = SaveFormYearApiV1YearYearIdPostErrors[keyof SaveFormYearApiV1YearYearIdPostErrors];

export type SaveFormYearApiV1YearYearIdPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
    /**
     * Returned when user signed up form for the first time
     */
    201: unknown;
    /**
     * Returned when user updated form
     */
    204: void;
};

export type SaveFormYearApiV1YearYearIdPostResponse = SaveFormYearApiV1YearYearIdPostResponses[keyof SaveFormYearApiV1YearYearIdPostResponses];

export type ProxyPathGetData = {
    body?: never;
    path: {
        path: string;
    };
    query?: never;
    url: '/{path}';
};

export type ProxyPathGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ProxyPathGetError = ProxyPathGetErrors[keyof ProxyPathGetErrors];

export type ProxyPathGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseURL: 'http://localhost:8000' | (string & {});
};
