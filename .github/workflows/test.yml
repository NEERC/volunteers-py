name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    environment: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Prepare environment
      run: |
        cat << EOF > .env
        $(jq -r 'to_entries | map(select(.key | startswith("VOLUNTEERS_")) | "\(.key)=\(.value|tostring)") | .[]' <<< '${{ toJSON(secrets) }}')
        $(jq -r 'to_entries | map(select(.key | startswith("VOLUNTEERS_")) | "\(.key)=\(.value|tostring)") | .[]' <<< '${{ toJSON(vars) }}')
        EOF

    - name: Run tests
      run: poetry run pytest
