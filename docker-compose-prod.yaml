services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    # ports:
    #   - "8000:8000"
    networks:
      - app-network

  ui:
    build:
      context: ui
      dockerfile: Dockerfile
      args:
        - PUBLIC_URL=${PUBLIC_URL}
        - MODE=${MODE}
        - VITE_TELEGRAM_BOT_HANDLE=${VITE_TELEGRAM_BOT_HANDLE}
        - VITE_TELEGRAM_BOT_ORIGIN=${VITE_TELEGRAM_BOT_ORIGIN}
    # ports:
    #   - "3000:3000"
    networks:
      - app-network

  proxy:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - PUBLIC_URL=${PUBLIC_URL}
    # ports:
    #   - "8267:80"
    networks:
      - app-network
      - proxy
    environment:
      - VIRTUAL_HOST=${PUBLIC_URL}

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "15432:5432"
    volumes:
      - dev-db:/var/lib/postgresql/data
    networks:
      - app-network

  # prometheus:
  #   image: prom/prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #     - ./prometheus/prometheus.rules.yml:/etc/prometheus/prometheus.rules.yml
  #   networks:
  #     - app-network
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--web.enable-lifecycle'
  #   depends_on:
  #     - alertmanager

  # alertmanager:
  #   image: prom/alertmanager
  #   container_name: alertmanager
  #   cap_add:
  #     - NET_ADMIN
  #     - NET_RAW
  #   ports:
  #     - "9093:9093"
  #   env_file:
  #     - .env
  #   entrypoint: ["/etc/alertmanager/entrypoint.sh"]
  #   command: ["--config.file=/etc/alertmanager/alertmanager.yml"]
  #   volumes:
  #     - ./alertmanager.template.yml:/etc/alertmanager/alertmanager.template.yml
  #     - ./entrypoint.sh:/etc/alertmanager/entrypoint.sh
  #     - ./templates:/etc/alertmanager/templates
  #   networks:
  #     - app-network

  # node_exporter:
  #   image: quay.io/prometheus/node-exporter:v1.9.1
  #   container_name: node_exporter
  #   command:
  #     - '--collector.disable-defaults'
  #     - '--collector.cpu'
  #   ports:
  #     - "9100:9100"  # Required for Windows/Mac
  #   volumes:
  #     - /proc:/host/proc:ro  # Needed for CPU stats
  #   restart: unless-stopped

  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor:v0.47.0
  #   container_name: cadvisor
  #   network_mode: host
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:rw
  #     - /sys:/sys:ro
  #     - /var/lib/docker:/var/lib/docker:ro
  #   restart: unless-stopped

volumes:
  dev-db:

networks:
  app-network:
    driver: bridge
  proxy:
    external: true
